using System;
using System.Collections.Generic;
using System.IO;

namespace ModCSVToPrecache
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string modCSVPath = "";
            string[] argsN = Environment.GetCommandLineArgs();
            if (argsN.Length > 1)
            {
                modCSVPath = argsN[1];
            }
            else
            {
                Console.WriteLine("Usage: ModCSVToPrecache.exe <mod.csv>");
                System.Threading.Thread.Sleep(3000);
                Environment.Exit(0);
            }

            if (File.Exists("_precache.gsc"))
            {
                Console.WriteLine("Found _precache.gsc, Would You Like To Overwrite? (Y/N)");

                string input = Console.ReadLine();
                if (input.ToLower() == "y")
                {
                    File.Delete("_precache.gsc");
                    Console.Clear();
                }
                else
                {
                    Console.WriteLine("Exiting...");
                    System.Threading.Thread.Sleep(1000);
                    Environment.Exit(0);
                }
            }

            string[] rawCSV = File.ReadAllLines(modCSVPath);

            string[] xAnimsP = AddAnimPrecache(GetXAnims(rawCSV));
            string[] xModelsP = AddModelPrecache(GetXModels(rawCSV));
            File.WriteAllLines("_precache.gsc", PrecacheFormat(AddTwoArrays(xAnimsP, xModelsP)));

            Console.WriteLine("Success!");
            Console.WriteLine($@"Written To {Environment.CurrentDirectory}\_precache.gsc!");
            System.Threading.Thread.Sleep(3000);
            Environment.Exit(0);
        }


        private static string[] GetXAnims(string[] CSV)
        {
            List<string> list = new List<string>();

            foreach (string line in CSV)
            {
                if (line.Contains("xanim"))
                {
                    list.Add(line.Substring(line.IndexOf(',') + 1));
                }
            }


            return list.ToArray();
        }
        private static string[] GetXModels(string[] CSV)
        {
            List<string> list = new List<string>();

            foreach (string line in CSV)
            {
                if (line.Contains("xmodel"))
                {
                    list.Add(line.Substring(line.IndexOf(',') + 1));
                }
            }


            return list.ToArray();
        }
        private static string[] AddAnimPrecache(string[] anims)
        {
            List<string> strings = new List<string>();
            foreach (string anim in anims)
            {
                strings.Add($"PrecacheMPAnim(\"{anim}\");");
            }

            return strings.ToArray();
        }
        private static string[] AddModelPrecache(string[] models)
        {
            List<string> strings = new List<string>();
            foreach (string model in models)
            {
                strings.Add($"PrecacheModel(\"{model}\");");
            }

            return strings.ToArray();
        }
        private static string[] AddTwoArrays(string[] arr1, string[] arr2)
        {
            List<string> strings = new List<string>();
            foreach (string str in arr1)
            {
                strings.Add(str);
            }
            foreach (string str in arr2)
            {
                strings.Add(str);
            }

            return strings.ToArray();
        }
        private static string[] PrecacheFormat(string[] all)
        {
            List<string> x = new List<string>();
            string format = "#include maps\\mp\\_utility;\n#include common_scripts\\utility;\n#using_animtree(\"multiplayer\");\nprecache()\n{\n";
            x.Add(format);
            foreach (string str in all)
            {
                x.Add(str);
            }
            x.Add("\n}");
            x.Add("\n\n//This file was automatically generated by ModCSVToPrecache.exe\n//https://github.com/kruumy/mod.csv-to-precache");
            return x.ToArray();
        }
    }
}
